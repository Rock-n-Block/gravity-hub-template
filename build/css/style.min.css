/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400; 500;600;669;700;800;900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}:root{--bg-color:#12141d;--text-color:#ffffff;--title-color:#fafafa;--bold-color:#fafafa;--accent-color:#ff8e1e;--like-color:#ff0000;--color-orange:#ff8e1e;--color-orange-accent:#e17f1d;--container-width:1250px;--container-paddings:10px}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{background:var(--bg-color);margin:0;font-family:Poppins,sans-serif;cursor:default}.container{max-width:var(--container-width);padding:var(--container-paddings);margin:0 auto}p{padding:0;margin:0;line-height:1;color:var(--text-color);font-weight:400}b{color:var(--bold-color)}.text{display:inline-block}.text-accent{color:var(--accent-color)}.text-title{color:var(--title-color);font-weight:700}.button{cursor:pointer;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center}.button-orange{background:var(--color-orange)}.button-orange:hover{background:var(--color-orange-accent)}.button-login{color:var(--text-color);font-size:16px;font-weight:500}.button-login:hover{color:var(--color-orange-accent)}.button-login:before{background:url(../img/icons/login.svg) no-repeat 0 0/cover;content:'';display:block;position:relative;width:18px;height:18px;margin-right:10px}.logo{background:url(../img/logo.svg) no-repeat center/contain;width:133px;height:60px}img{max-width:100%}a{text-decoration:none}.button,a,p,span{-webkit-transition:.4s ease;transition:.4s ease}header{position:absolute;top:0;left:0;right:0;padding:50px 10px;z-index:3}header .container{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between}header .nav{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center}header .menu-toggle{margin-left:40px;width:35px;cursor:pointer}header .menu-toggle:hover .menu-toggle-line:nth-child(2){background:var(--color-orange-accent);margin-left:10px}header .menu-toggle-line{background:var(--text-color);width:100%;display:block;height:2px;border-radius:10px;margin-bottom:5px;-webkit-transition:.4s ease;transition:.4s ease}header .menu-toggle-line:nth-child(2){max-width:25px}section.header{background:url(../img/header.png) no-repeat center/cover;height:860px;position:relative;overflow:hidden}section.header .container{position:absolute;left:0;right:0;height:100%;display:-webkit-box;display:flex;z-index:1}section.header .container:after{background:url(../img/cosmos.svg) no-repeat 0 0/130%;content:'';display:block;position:absolute;width:100%;height:100%;bottom:-490px;right:-490px;z-index:-1}section.header .container .header-wrap{display:grid;grid-template-columns:minmax(300px,600px) minmax(300px,550px);-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center;width:100%;grid-gap:20px}section.header .container .header-block-text{position:relative;z-index:1}section.header .container .header-block-text:before{background:url(../img/triangle.svg) no-repeat left/cover;content:'';display:block;position:absolute;width:65%;height:74%;top:-100px;z-index:-1;left:0}section.header .container .header-block-text *{margin:12px 0}section.header .container .header-block-text h1{font-size:100px;line-height:110px}section.header .container .header-block-text span{font-size:36px;line-height:40px}section.header .container .header-block-text p{font-weight:300;font-size:17px;line-height:27px}section.header .container .header-block-gravity{background:url(../img/gravity-header.svg) no-repeat left/cover;padding-bottom:91%;width:90%;position:relative}section.header .container .header-block-gravity:after{background:url(../img/gravity-header-text.svg) no-repeat 0 0/cover;content:'';display:block;position:absolute;width:15px;height:135px;top:35%;z-index:1;right:-50px}section.block .container{display:grid;grid-template-columns:minmax(300px,350px) minmax(300px,750px);grid-gap:20px;width:100%;-webkit-box-pack:justify;justify-content:space-between}section.block .container .block-text{position:relative}section.block .container .block-text:before{background:url(../img/bg-title.svg) no-repeat top center/cover;content:'';display:block;position:absolute;width:120%;height:100%;top:-50px;left:-80px;z-index:-1}section.block .container .block-text *{margin-bottom:20px;line-height:1.3}section.block .container .block-text .text-title{font-size:48px}.block-nodes .block-image{background:-webkit-gradient(linear,left top,left bottom,from(rgba(24,27,44,.95)),to(rgba(24,27,44,.95))),url(../img/nodes.png);background:linear-gradient(rgba(24,27,44,.95),rgba(24,27,44,.95)),url(../img/nodes.png);background-position:top center;background-size:cover;background-repeat:no-repeat}.block-watching .container{grid-template-columns:minmax(300px,750px) minmax(300px,350px)!important}.block-watching .container .block-image{background:url(../img/watching_data.svg);background-position:top center;background-size:cover;background-repeat:no-repeat}.footer{border:1px solid red}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
